const chai=require("chai"),expect=chai.expect,TodoRequestOptions=require("./TodoRequestOptions");describe("TodoRequestOptions",(()=>{const e="http://mockedurl.test/",t="todo/",r=new TodoRequestOptions(e,t);it("getTodoIdUrl() should return empty",(()=>{expect(r.getTodoIdUrl()).to.be.empty})),it("getTodoIdUrl({id: Int}) should return Int/",(()=>{var e={id:1};expect(r.getTodoIdUrl(e)).to.equal(e.id+"/"),e={id:2},expect(r.getTodoIdUrl(e)).to.equal(e.id+"/"),e={id:13467839},expect(r.getTodoIdUrl(e)).to.equal(e.id+"/")})),it("getQueryFilters() should return empty",(()=>{expect(r.getQueryFilters()).to.be.empty})),it("getQueryFilters({description: String}) should return description regex query url",(()=>{var e={description:"find"};expect(r.getQueryFilters(e)).to.have.string("find"),e={description:"found"},expect(r.getQueryFilters(e)).to.have.string("found")})),it("getUrl() should return url",(()=>{var o=e+t;expect(r.getUrl()).to.equal(o)})),it("getUrl({id: Int}) should return url with task id",(()=>{var o={id:1123},i=e+t+r.getTodoIdUrl(o);expect(r.getUrl(o)).to.equal(i)})),it("getUrl({description: Int}) should return url with queryString filter",(()=>{var o={description:"searchText"},i=e+t+r.getQueryFilters(o);expect(r.getUrl(o)).to.equal(i)})),it("new TodoRequestOptions(host, url) should get different urls",(()=>{var e="http://mockedurl-different.test",t="diff/",r=new TodoRequestOptions(e,t),o=e+t;expect(r.getUrl()).to.equal(o)}))}));